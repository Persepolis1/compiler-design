Sentencial Form:
 prog 
USED RULE :
 prog               -> classDecl funcDef program funcBody ; 

Sentencial Form:
 classDecl funcDef program funcBody ; 
USED RULE :
 classDecl          -> EPSILON 

Sentencial Form:
 funcDef program funcBody ; 
USED RULE :
 funcDef            -> EPSILON 

Sentencial Form:
 program funcBody ; 
USED RULE :
 funcBody           -> { varDecl statement } 

Sentencial Form:
 program { varDecl statement } ; 
USED RULE :
 varDecl            -> type id arraySize ; varDecl 

Sentencial Form:
 program { type id arraySize ; varDecl statement } ; 
USED RULE :
 type               -> int 

Sentencial Form:
 program { int id arraySize ; varDecl statement } ; 
USED RULE :
 arraySize          -> EPSILON 

Sentencial Form:
 program { int id ; varDecl statement } ; 
USED RULE :
 varDecl            -> EPSILON 

Sentencial Form:
 program { int id ; statement } ; 
USED RULE :
 statement          -> EPSILON 

Successfully parsed! 
 program { int id ; } ; 
Token Stream : 
 program { int id ; } ; $